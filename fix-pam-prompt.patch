
# HG changeset patch
# User Todd C. Miller <Todd.Miller@courtesan.com>
# Date 1504625419 21600
# Node ID 6ee5cc13af69f4248dfa1d89215e7c95fa90d051
# Parent  7e6bf56cb06cfdc82f5b636ebe2851cfeda50f17
Fix a logic error in 96651906de42 which prevented sudo from using
the PAM-supplied prompt.  Bug #799

diff -r 7e6bf56cb06c -r 6ee5cc13af69 plugins/sudoers/auth/pam.c
--- a/plugins/sudoers/auth/pam.c	Fri Sep 01 14:09:43 2017 -0600
+++ b/plugins/sudoers/auth/pam.c	Tue Sep 05 09:30:19 2017 -0600
@@ -435,28 +435,32 @@
     size_t user_len;
     debug_decl(use_pam_prompt, SUDOERS_DEBUG_AUTH)
 
-    if (!def_passprompt_override) {
-	/* If sudo prompt matches "^Password: ?$", use PAM prompt. */
-	if (PROMPT_IS_PASSWORD(def_prompt))
-	    debug_return_bool(true);
-
-	/* If PAM prompt matches "^Password: ?$", use sudo prompt. */
-	if (PAM_PROMPT_IS_PASSWORD(pam_prompt))
-	    debug_return_bool(false);
+    /* Always use sudo prompt if passprompt_override is set. */
+    if (def_passprompt_override)
+	debug_return_bool(false);
 
-	/*
-	 * Some PAM modules use "^username's Password: ?$" instead of
-	 * "^Password: ?" so check for that too.
-	 */
-	user_len = strlen(user_name);
-	if (strncmp(pam_prompt, user_name, user_len) == 0) {
-	    const char *cp = pam_prompt + user_len;
-	    if (strncmp(cp, "'s Password:", 12) == 0 &&
-		(cp[12] == '\0' || (cp[12] == ' ' && cp[13] == '\0')))
-		debug_return_bool(false);
-	}
+    /* If sudo prompt matches "^Password: ?$", use PAM prompt. */
+    if (PROMPT_IS_PASSWORD(def_prompt))
+	debug_return_bool(true);
+
+    /* If PAM prompt matches "^Password: ?$", use sudo prompt. */
+    if (PAM_PROMPT_IS_PASSWORD(pam_prompt))
+	debug_return_bool(false);
+
+    /*
+     * Some PAM modules use "^username's Password: ?$" instead of
+     * "^Password: ?" so check for that too.
+     */
+    user_len = strlen(user_name);
+    if (strncmp(pam_prompt, user_name, user_len) == 0) {
+	const char *cp = pam_prompt + user_len;
+	if (strncmp(cp, "'s Password:", 12) == 0 &&
+	    (cp[12] == '\0' || (cp[12] == ' ' && cp[13] == '\0')))
+	    debug_return_bool(false);
     }
-    debug_return_bool(false);
+
+    /* Otherwise, use the PAM prompt. */
+    debug_return_bool(true);
 }
 
 /*

